			   Life with qmail

I. Introduction

A. What is qmail?

qmail is an Internet Mail Transfer Agent (MTA) for UNIX-like operating
systems. It's a drop-in replacement for the Sendmail system provided
with UNIX operating systems. qmail uses the Simple Mail Transfer
Protocol (SMTP) to exchange messages with MTA's on other systems.

B. Background

1. How Internet mail works

When a user on one host sends a message to a user on a another host,
many things happen behind the scenes that you may not be aware of. If
you are aware of them, feel free to skip this section.

Say Alice, alice@alpha.example.com, sends a message to Bob,
bob@beta.example.com. Here's what happens:

a. Alice composes the message with her mail user agent (MUA),
something like "mutt" or "pine". She specifies the recipient in a "To"
field, the subject of the message in a "Subject" field, and the text
of the message itself. It looks something like:

    To: bob@beta
    Subject: lunch

    How about pizza?

b. When she's satisfied with the message, she tells the MUA to send
it.

c. At this point, the MUA can add additional header fields like
"Date" and "Message-Id" and modify the values Alice entered (e.g.,
replace "bob@beta" with "Bob <bob@beta.example.com>". Next, the MUA
"injects" the message into the mail system. There are two ways to
this: it can run a program provided by the mail system for the purpose
of injecting messages, or it can open a connection to the Simple Mail
Tranfer Protocol (SMTP) port on the local system or a remote mail
server. In this example, we'll assume the MUA uses a local injection
program to pass messages to the MTA. The details of the injection
process vary by MTA, but on UNIX systems the "sendmail" method is a de
facto standard. With this method, the MUA can put the header and body
in a file, separated by a blank line, and pass the file to the
"sendmail" program.

d. If the injection succeeds--the message was syntactically correct
and "sendmail" was invoked properly--the message is now the MTA's
responsibility. Details vary greatly by MTA, but generally the MTA on
alpha examines the header to determine where to send the message,
opens an SMTP connection to beta, and forwards the message to the MTA
on the beta system. The SMTP dialogue requires messages to be sent in
two parts: the "envelope", which specifies the recipient's address
(bob@beta.example.com) and the return address
(alice@alpha.example.com), and the message itself, which consists of
the header and body.

e. If the beta MTA rejects the message, perhaps because there's no
user "bob" on the system, the MTA on alpha sends a "bounce" message
to the return address, alice@alpha, to notify her of the problem.

f. If the beta MTA accepts the message, it looks at the recipient's
address, determines whether it's local to beta or on a remote
system. In this case, it's local, so the MTA either delivers the
message itself or passes it to a mail delivery agent (MDA) like
/bin/mail or procmail.

g. If the delivery fails, perhaps because Bob has exceeded his mail
quota, the beta MTA sends a bounce message to the envelope return
address, alice@alpha.

h. If the delivery succeeds, the message waits in Bob's mailbox until
his MUA reads it and displays it.

2. For more information about MTA's and Internet mail, see <DJB URL's>
and <Internet RFC's>.

C. Terminology

D. History

qmail was written by Dan Bernstein, a math professor now at the
University of Illinois in Chicago. Dr. Bernstein is well known for his
fight with the U.S. government over restrictions against the
exportation of encryption technology.  The first public release of
qmail, version 0.71, occurred on February, NN, 1996. The first beta
release, 0.90, was on MM, DD, YY.

Version 1.0, the first general release, was announced on MM, DD,
YY. The current version, 1.03, was released on MM, DD, YY.

The next release is expected to be an evaluation version of 2.0. Some
of things that might appear in version 2 are covered at <URL of
futures page>.

E. Features

Complete MTA
Security
Efficiency
Performance
Sendmail compatibility
Extension addresses

F. Related packages
dot-forward
fastforward
ucspi-tcp
daemontools
qmailanalog
rblsmtpd

G. Architecture
Modular
pictures

H. Portability

I. License

J. Comparison with other MTA's
Sendmail
Postfix
exim
Cameron Laird's page

K. Documentation
man pages
FAQs
Book
List archives

L. Support
Mailing lists
Consultants

II. Installation

A. Download the source
qmail
ucspi-tcp
daemontools

B. Build the source
verify build environment
unpack
create users and groups
create directories
do the build

C. Install binaries
make install
install ucspi-tcp
install daemontools
start qmail

D. Test
Follow djb's instructions

III. Configuration

A. Relaying
Intro
Disabling relaying
Allowing selective relaying

B. Multiple host names
rcpthosts
locals

C. Virtual domains
Intro
Virtualdomains

D. Aliases
System-wide
Domain-wide
User-specific

E. qmail-users
Intro
Usage

IV. Usage

A. .qmail files
mailbox
maildir
program
forward
extension addresses 

B. Injecting messages
SMTP
/var/qmail/bin/sendmail
/var/qmail/bin/qmail-inject

V. Advanced Topics

A. POP and IMAP

B. Multi-RCPT vs. Single RCPT delivery

C. Troubleshooting
 

